{"meta":{"title":"枯木","subtitle":null,"description":null,"author":"清晨的雨天","url":""},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"书单","date":"2019-02-10T13:32:48.000Z","updated":"2020-10-14T07:04:39.845Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"分类","date":"2020-03-09T05:50:05.000Z","updated":"2020-10-15T09:32:50.532Z","comments":true,"path":"categories/index.html","permalink":"/categories/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"留言板","date":"2018-12-20T15:13:48.000Z","updated":"2020-10-15T02:14:15.482Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 人生若只如初见，何事秋风悲画扇。 纳兰性德《木兰词·拟古决绝词柬友》","keywords":"留言板"},{"title":"说说","date":"2020-10-10T15:14:28.000Z","updated":"2020-10-15T01:55:47.467Z","comments":false,"path":"diary/index.html","permalink":"/diary/index.html","excerpt":"","text":"","keywords":"说说"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"音乐","date":"2020-10-10T15:14:28.000Z","updated":"2020-10-14T11:58:32.438Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-03-09T05:50:05.000Z","updated":"2020-10-15T11:27:26.938Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"Js_03","slug":"Js_03","date":"2020-10-14T16:00:00.000Z","updated":"2020-10-16T06:55:27.071Z","comments":false,"path":"2020/10/15/Js_03/","link":"","permalink":"/2020/10/15/Js_03/","excerpt":"","text":"函数分为系统函数和自定义函数 ​ function：功能体，函数，方法，接受若干个数据，返回处理的结果。——用于封装多次执行的代码 创建普通函数 function 函数名称(){ 函数体;//封装的代码 } 调用 ​ 函数名称(参数列表) ​ return 用于获取函数调用后的结果，如果函数中没有 return 或者 return 后不加任何值，返回 under find return 一旦执行后，结束函数，不会执行后续函数体代码 创建带有参数的函数 function 函数名称(参数列表){ 函数体; } 作用域 变量的作用域 ​ 变量和函数的可访问范围 ​ 全局作用域：在函数外使用的 var 声明的变量，可以在任意位置访问到 ​ 函数作用域：在函数内使用的 var 声明的变量，只能在函数内访问到 变量提升 ​ JS程序在执行前，会将 var 声明的变量提升到所在作用域的最前边，赋值还是在原来的位置 函数的作用域 ​ 函数的可访问范围，同样也分为全局函数和局部函数，全局函数可以在任意位置访问，而局部函数只能在所在的作用域下访问 ​ 使用 function 关键字创建的函数会提升到所在作用域的最前面 递归 ​ 在函数中调用自己的一种算法 匿名函数 创建函数 函数声明 function fn( ){ } 函数表达式 var fun = function( ){ } 函数名称和函数名称( ) 函数名称就是一个变量，保存了函数的结构 函数名称( ) 是调用函数，得到函数的返回结果 匿名函数自调用 创建函数作用域，防止污染全局 (function(形参){ //作用域 })(实参) 回调函数 将匿名函数以实参形式传递 function fn (){ a 就是函数名称 a()就是掉用传递的匿名函数 } fn(function(){ }) 全局函数 Number()/parseInt()/parseFloat() encodeURI() 编码一个 URI decodeURI() 对已编码的URI进行解码 isNaN() 检测一个值是否为 NaN，如果是 NaN 返回 true，不是返回 false isFinite() 检测一个值是非为有限值，如果是返回 true，不是返回 false，无限值只有Infinity eval() 执行字符串中的表达式","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Js","slug":"技术/Js","permalink":"/categories/技术/Js/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Js","slug":"技术/Js","permalink":"/categories/技术/Js/"}]},{"title":"Js_02","slug":"Js_02","date":"2020-10-13T16:00:00.000Z","updated":"2020-10-16T06:46:32.388Z","comments":false,"path":"2020/10/14/Js_02/","link":"","permalink":"/2020/10/14/Js_02/","excerpt":"","text":"运算符表达式：由数据或者由运算符连接的操作数据组成的形式 运算符分为算术运算符、比较运算符、逻辑运算符、位运算符、赋值运算符、三目运算符 算术运算符 + - * / % ++ – % 取余 ++ 自增，在原来基础之上加1 – 自减，在原来基础之上减1 自增和自减前置和后置单独使用没有区别，只有赋值才会有区别 var a=1; var b=a++;//先把a的值赋给b，然后a再执行自增 var c=2; var d=++c;//先让c的值执行自增，然后将自增的结果赋给d 比较运算符 &lt; &gt; = &lt;= &gt;= ==(等于) !=(不等于) ===(全等于) !==(不全等于) == 等于，比较值是否相同 === 全等于，先比较类型，再比较值 NaN=NaN //false NaN=和任何值比较都是false 逻辑运算符 &amp;&amp; 并且（逻辑与），关联的两个条件都是true，结果是true，否则是false || 或者（逻辑或），关联的两个条件至少有一个为true，结果是true，否则false ! 逻辑非，取反 短路逻辑： &amp;&amp; 当第一个条件为false，不再执行第二个条件 || 当第一个条件为true，不再执行第二个条件 位运算符 按位与（&amp;）上下位都是1，结果是1，否则是0 按位或（|）上下位含有1，结果是1，否则是0 按位异或（^）上下位不同为1，相同为0 按位右移（&gt;&gt;）删除二进制的最后一位或者多位，每次缩小到原来的一半或者更多 按位左移（&lt;&lt;）在二进制的最后添加0，成倍增加 赋值运算符 = += -= *= /= %=… 计算赋值：先执行计算，再执行赋值 三目运算符 一目运算符：由一个运算符连接了一个操作数据或者表达式 ++ – ! 二目运算符：由一个运算符连接了两个操作数据或者表达式 三目运算符：由两个运算符连接了三个操作数据或者表达式 浏览器端函数 alert() 弹出警示框 prompt() 弹出提示(输入)框，需要使用变量保存用户输入的值，类型是字符串型；如果点击取消返回null 流程控制 if语句 if(条件表达式){ 语句块 } if-else语句 if(条件表达式){ 语句块1 }else{ 语句块2 } if-else嵌套 if(条件表达式1){ 语句块1 }else if(条件表达式2){ 语句块2 }else{ 语句块n //以上所有的条件都是false } switch-case语句 switch(表达式){ case 值1: //会将表达式和值1比较 语句块1 break; //结束，跳出switch-case语句 case 值2: 语句块2 break; 循环结构​ 循环是一遍又一遍执行相同或者相似的内容 ​ 循环的两个要素 ​ 循环条件：可以控制循环的次数 ​ 循环体：要重复执行的相同或者相似内容 while循环 while(循环条件){ 循环体 } break 在循环体中执行后，就会跳出循环。 do-while循环 do{ 循环体 }while(循环条件); for循环 for(初始值; 循环条件; 增量){ 循环体 } 循环嵌套 在一个循环体的内部，还有其它的循环；任意两个循环之间可以相互嵌套","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Js","slug":"技术/Js","permalink":"/categories/技术/Js/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Js","slug":"技术/Js","permalink":"/categories/技术/Js/"}]},{"title":"Js_01","slug":"Js_01","date":"2020-10-12T16:00:00.000Z","updated":"2020-10-16T06:36:52.202Z","comments":false,"path":"2020/10/13/Js_01/","link":"","permalink":"/2020/10/13/Js_01/","excerpt":"","text":"JS 概述 历史 1995年JS出现在网景公司的浏览器中 1996年，IE3中也出现了JS，叫做JScript 1997年，出现了国际标准规范ECMAScript 2009年，出现了CommonJS规范，JS开始往服务器端发展，出现了Nodejs 现状 JS既可以运行在浏览器中，也可以运行在服务器端 特点 解释型语言，编译一行执行一行 弱类型语言 基于对象 跨平台，运行在不同的操作系统 应用场景 开发浏览器端的交互效果，进行服务器端的开发 搭建开发环境 浏览器 浏览器自带的JS解释器，推荐使用谷歌浏览器 火狐，谷歌，IE，Safari，欧朋 服务器端 安装Nodejs：www.nodejs.org 官网 查看安装是否成功： 打开命令行窗口 node -v 回车 显示版本号则安装成功 运行JS 浏览器端 创建01.js和01.html两个文件，把js嵌入到html中 Nodejs 命令行窗口 &gt; node 文件 JS语法规范 区分大小写 每行代码结束的分号可以省略 ​ 分为单行注释(//…)和多行注释(/…/) 变量和常量变量​ 用于保存程序中的数据 声明变量 var x=1; 使用关键字var声明变量，x是变量名称，在内存中开辟了一块空间，把数据保存进去。 练习：声明多个变量，分别保存一个员工的编号，姓名，性别，生日，工资；并打印出来 命名规范 变量名称可以由字母，数字，下划线，美元符号组成，不能以数字开头，不能使用关键字，不推荐使用汉字。 变量赋值 变量声明未赋值则为undefined（未定义），变量可以多次赋值，赋不同类型的值，是弱类型语言的特点。 一次声明多个变量 var a=1,b=2,c; 多个变量之间用逗号隔开 常量 常量 声明后必须赋值，不允许重新赋值 const userName=’root’； 数据类型 分为原始类型和引用类型 原始类型分为数值型、字符串型、布尔型、未定义型、空。 数值型 整型，浮点型 字符串型 被引号所包含的数据，不区分单双引号 查看任意一个字符的Unicode码 &#39;a&#39;.charCodeAt( ) 布尔型 只有两个值，分别是true和false，表示真和假 未定义型 只有一个值为undefined 数据类型转换 toString（） 转换成字符串，将数值和布尔型转换成 string 类型 parseInt（） 解析出一个 string 或 number 的整数部分 如果没有可以转换的部分，则返回NaN（Not a Number） parseFloat（） 解析一出一个 string 的浮点数部分 如果没有可以转换的部分，则返回NaN Number（） 把一个 string 解析为 number 如果包含非法字符，则返回NaN NaN Not a Number 不是一个数字 NaN 和任何值运算，都返回NaN，不包括和字符串的相加 隐式转换：如果转数值自动的调用Number 函数 isNaN函数 isNaN（） 用于判断其参数是否为一个“非数字(NaN)”值 如果把NaN与任何值（包括其自身）相比得到的结果均是 flase，所以要判断某个值是否为NaN，不能使用 = =或 = = = 运算符。这种情况下，只能使用 isNaN（）函数 通常用于检测类型转换函数的运算结果，以判断它们表示的是否是合法的数字。","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Js","slug":"技术/Js","permalink":"/categories/技术/Js/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Js","slug":"技术/Js","permalink":"/categories/技术/Js/"}]},{"title":"Mysql_03","slug":"Mysql_03","date":"2020-10-11T16:00:00.000Z","updated":"2020-10-16T06:36:46.411Z","comments":false,"path":"2020/10/12/Mysql_03/","link":"","permalink":"/2020/10/12/Mysql_03/","excerpt":"","text":"1. 简单查询 查询特定的列 select 列名 from 表名; 查询多个列中间用 ，(英分)隔开 查询所有列 Select * from 表名; 给列起别名 Select 列名 as 别名,...., from 表名; 别名可以用中文，多个语句之间用 , (英分)隔开 显示不同的记录 Select distinct sex from 表名; distinct：有区别的，不同的 查询时执行计算 select 3.14*5+18*9+21.6*51.9; 查询的结果集排序 Select * from 表名 order by 列名 asc; #ascendant 升序 Select * from 表名 order by 列名 desc; #descendant 降序 条件查询 Select * from 表名 where 条件; 模糊条件查询 select * from 表名 where 列名 like &#39;%***%&#39;; select * from 表名 where 列名 like &#39;_***%&#39;; % 匹配任意个字符 &gt;=0 _ 匹配任意一个字符 =1 以上两个匹配符号必须要结合like关键字使用 2. 简单查询简单查询——分页查询 查询的结果集中有太多的数据，一次显示不完可以做成分页显示 需要有两个已知的条件：每页的数据量、当前的页码 计算方式：每页开始查询的值 = (当前页码-1)*每页的数据量 每页显示5条数据，分别查询出前3页的数据： select * from 表名 limit 0,5; select * from 表名 limit 5,5; 3. 复杂查询 聚合查询/分组查询 函数：function，是一个功能体，需要提供若干个数据，返回处理的结果。 聚合函数 count() / sum() / avg() / max() / min() / year() 数量 总和 平均 最大 最小 获取日期中的年份 聚合查询只适合查询分组条件和聚合函数。 子查询 多个SQL命令的组合，把一个SQL命令的结果作为另一个的条件 多表查询 要查询的数据分布在不同的表中 表和表之间要有关联，必须添加表之间的关联条件。 内连接 select ename,dname from emp inner join dept on deptid=did; 左外连接 select ename,dname from emp left outer join dept on deptid=did; 左侧表中所有的记录都显示，即使没有对应的，先写哪个表哪个就是左。 右外连接 select ename,dname from emp right outer join dept on deptid=did; 右侧表中所有的记录都显示，记录没有对应的，后写哪个表哪个就是右。 左外和右外连接中的outer关键字可以省略。 全连接 full join mysql不支持全连接 union 联合后合并相同的记录 union all 联合后不合并相同的记录","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Mysql","slug":"技术/Mysql","permalink":"/categories/技术/Mysql/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Mysql","slug":"技术/Mysql","permalink":"/categories/技术/Mysql/"}]},{"title":"Mysql_02","slug":"Mysql_02","date":"2020-10-09T16:00:00.000Z","updated":"2020-10-16T03:46:07.416Z","comments":false,"path":"2020/10/10/Mysql_02/","link":"","permalink":"/2020/10/10/Mysql_02/","excerpt":"","text":"1. 计算机如何存储字符 如何存储英文字符 ASCII: 对英文符号和字母进行编码，总共有128个 Latin-1: 对欧洲字符进行了编码，总共有256个，兼容ASCII（MySQL默认使用这种编码） 如何存储中文字符 GB2312: 对常用的6千多汉字进行了编码，兼容ASCII GBK: 对两万多汉字进行了编码，兼容GB2312 Unicode： 对世界上主流国家常用的语言进行了编码，具体存储方案分为utf-8，utf-16，utf-32，兼容ASCII。 解决mysql中文乱码 脚本文件另存为的编码为utf-8 客户端连接服务器端的编码为utf-8 (set names utf8;) 服务器端创建数据库使用的编码为uft-8 ( charset=utf8 ) 2. 列类型在创建数据表的时候，指定的列可以存储的数据类型 create table 表名( nid 列类型 ); 数值型——引号可以省略 tinyint 微整型，占1个字节，范围-128~127 smallint 小整型，占2个字节，范围-32768~32767 int 整型，占4个字节，范围-2147483648~2147483647 bigint 大整型，占8个字节 float 单精度浮点型，占4个字节，最大是3.4e38，精度会受影响，比int大的多 double 双精度浮点型，占8个字节，精度会受影响，比bigint大的多 decimal(M,D) 定点小数，小数不会发生变化，M代表总的有效位数，D代表小数点后的有效位数 boolean/bool 布尔型，有两个特殊的值，分别是true（真）和false（假），通常用于存储只有两个结果的数据；真正使用的时候boolean转为tinyint， true变为1，false变为0； 注：如果使用true和false，属于关键字，不能加引号。插入数据的时候推荐直接使用1或者0 日期时间型——必须加引号 date 日期型 格式2020-10-09 time 时间型 格式15:14:30 datetime 日期时间型 格式2020-10-09 15:14:30 字符串型——必须加引号 varchar(M) 变长字符串，几乎不会产生空间浪费，操作速度相对慢，M的最大值是65535,常用于存储变化长度的数据，例如文章的标题，内容… char(M) 定长字符串，可能产生空间浪费，操作速度相对快，M的最大值是255，常用于存储固定长度的数据，例如身份证号，手机号码… text(M) 大型变长字符串， M的最大值是2G 3. 列约束MySQL可以对要插入的数据进行特定的验证，只有符合条件才允许插入，否则认为是非法的插入 create table 表名( 列名 列类型 列约束 ); 主键约束——primary key 声明了主键约束的列上不允许插入重复的值，一个表中只能有一个主键约束，通常是加在编号列，会加快数据的查找速度 注：主键约束的列禁止插入null 非空约束——not null 声明了非空约束的列上不允许插入null 唯一约束——unique 声明了唯一约束的列上不允许出现重复的值，允许插入null，甚至多个null，可能会影响到默认的排序 默认值约束——default 可以使用default关键字设置默认值，具体有两种应用方式 insert into laptop values( 1,’小米Air’,default,…. ); 使用default关键字获取默认值 insert into laptop(lid,title) values(2,’thinkpad’); 没有出现的列会自动使用默认值。 检查约束——check mysql可以对插入的数据进行自定义的验证 create table student( score tinyint check(score&gt;=0 and score&lt;=100) ); 注：mysql不支持检查约束，认为会影响数据的插入速度，对服务器造成较大的压力（由JS代替） 外键约束 声明了外键约束的列会到另一个表的主键列取值，允许使用null，一个表中可以有多个外键约束。 注：外键约束对应的必须是主键列。外键约束列和对应的主键列，列类型要保持一致 4. 自增列auto_increment ，自动增长，会获取当前的最大值然后加1插入 注：自增列必须和主键列一起使用。自增列必须是整数形式的列上 如果要实现自增只需要赋值为null，允许手动赋值","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Mysql","slug":"技术/Mysql","permalink":"/categories/技术/Mysql/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Mysql","slug":"技术/Mysql","permalink":"/categories/技术/Mysql/"}]},{"title":"Mysql_01","slug":"Mysql_01","date":"2020-10-08T16:00:00.000Z","updated":"2020-10-16T06:33:13.064Z","comments":false,"path":"2020/10/09/Mysql_01/","link":"","permalink":"/2020/10/09/Mysql_01/","excerpt":"","text":"1. 数据的存储方式​ 特定的文件 / 内存 / 第三方云服务器 / 数据库服务器 2. 数据库​ 在存储数据的时候，按照特定的形式来组织存储数据，目的是为了对数据的操作——增删改查 数据库的发展历史 网状数据库——层次型数据库——关系型数据库——非关系型数据库(NoSQL) 关系型数据库逻辑结构 Server -&gt; Database -&gt; Table -&gt; Row -&gt; Column 数据库服务器 数据库 数据表 行 列 常见的关系型数据库 SQLite 微型数据库，常用于移动设备。 MySQL 开源中小型数据库，可用于各种操作系统。 PostgreSQL 开源中小型数据库。 SQL Server Microsoft开发的中小型数据库，只用于Windows系统。 Oracle Oracle公司开发的中大型数据库，可用于各种操作系统。 DB2 IBM公司开发的中大型数据库，常与IBM服务器搭配。 3. Mysql​ 软件： Xampp 一个MySQL数据库系统分为如下两个部分： 服务器端：负责存储和管理数据 客户端：用于向服务器发出增删改查操作命令 mysql部署结构 服务器端：启动服务 端口3306 ​ C:/xampp/mysql/bin/mysqld.exe 客户端：链接服务器 ​ C:/xampp/mysql/bin/mysql.exe 使用客户端链接服务器端 mysql.exe -h127.0.0.1 -P3306 -uroot -p -h host 主机，服务器的地址或域名 -P port 端口， -u user 用户，root(默认管理员用户) -p password 密码，xampp下root的密码为空 简写形式：mysql -uroot mysql常用管理命令 quit； 推出服务器的链接 show databases; 显示当前数据库服务器下所有的数据库 use 数据库名称； 进入指定的数据库 show tables; 查看数据库中所有的表 desc 表名；描述表的结构 show create table 表名； 查看创建表所用的命令、 SQL 命令 结构化查询语言，主要用于操作关系型数据库，包含有对数据的操作——增删改查 交互模式 在客户端命令行输入一行回车，服务器端就会执行一行，适用于临时性的查看数据 脚本模式 客户端把要执行的命令写在一个脚本文件中，然后一次性的提交给服务器执行，适用于批量的操作数据在连接的同时提交脚本 语法：mysql -uroot&lt;脚本路径 SQL命令的语法规范 一行SQL命令可以跨越多行，以英文的分号作为结束 SQL命令中不区分大小写，习惯上关键字大写，非关键字小写 假设某一条SQL命令出现语法错误，则此条语句及后面的所有语句不再执行 分为单行注释（#）和多行注释（/ /）","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Mysql","slug":"技术/Mysql","permalink":"/categories/技术/Mysql/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Mysql","slug":"技术/Mysql","permalink":"/categories/技术/Mysql/"}]},{"title":"Server","slug":"Server","date":"2020-09-29T16:00:00.000Z","updated":"2020-10-16T02:43:15.966Z","comments":false,"path":"2020/09/30/Server/","link":"","permalink":"/2020/09/30/Server/","excerpt":"","text":"1. 软件工程 程序设计 Ada - bug - debug 软件设计 IBM - Dos - Microsoft - Bill Gates - Windows 软件工程 给定成本、进度的前提下，开发出具有有效性，可维护，可追踪，可复用，可移植的软件产品。 2. 软件的生命周期(软件开发流程)俗称 三个周期八个阶段 软件定义期 可行性研究阶段 技术，人力，资金，设备，时间，回报率，政策，风俗。。。 需求分析阶段、 分为功能性需求分析和非功能性需求分析 非功能性需求对功能性需求的实现方式 软件的开发期 概要设计阶段——架构师 子模型，系统，技术选型，数据库设计 详细设计阶段——模块负责人 页面，主题内容，属性，功能、 编码实现阶段 U I设计——网页的效果图 前端工程师——将网页效果转换为 html，css，js格式的文件 后端工程师——为前端提供项目的数据 测试阶段——测试工程师 软件维护期 部署阶段——运维工程师 将软件部署到服务器 维护阶段 3. 学子商城功能性需求分析​ 前台子系统：http://www.codeboy.com:9999/ ​ 后台子系统：http://www.codeboy.com:9999/admin/login.html 前台子系统：商品模块（首页，列表，查询）用户模块（注册，登陆，用户中心，收藏）购物车模块（添加，修改，删除，确认订单） 后台子系统：商品模块（添加，修改，删除，检索）用户模块（列表，删除，检索）订单模块（列表，减速，修改） 移动子系统：商品模块（首页，列表，查询）用户模块（注册，登陆，用户中心，收藏）购物车模块（添加，修改，删除，确认订单） 4. 项目中的服务器​ 硬件：就是一台功能强大的计算机 ​ 软件：可以提供各种服务，例如WEB服务，数据库服务，游戏服务，文件服务 访问服务器 ​ 域名/IP：找服务器 ​ 端口：服务器下的每一个服务器都有对应的端口 ​ 协议：客户端要使用服务需要对应的协议 5. 后记FTP服务器(文件下载) 地址： http://code.tarena.com.cn 用户名：tarenacode 密码：code_2013 软件安装下载 链接：https://pan.baidu.com/s/1xL02vqb_XnLZoZzyjTRNKQ 提取码：a94v 单词地址：http://www.codece.com/","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Server","slug":"技术/Server","permalink":"/categories/技术/Server/"}],"tags":[{"name":"Web","slug":"Web","permalink":"/tags/Web/"},{"name":"学习日记","slug":"学习日记","permalink":"/tags/学习日记/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"Server","slug":"技术/Server","permalink":"/categories/技术/Server/"}]}]}